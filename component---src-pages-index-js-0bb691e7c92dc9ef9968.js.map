{"version":3,"sources":["webpack:///./src/components/TestSearch.js","webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/Layout.js"],"names":["tests","require","map","test","name","TestSearch","_useState","useState","value","setValue","inputRef","useRef","suggestions","filter","isEqual","match","sort","a","b","length","slice","react_default","createElement","react","index_es","style","width","maxWidth","onChange","e","target","inputProps","onKeyDown","keyCode","includes","navigate","slugify","lower","placeholder","open","Boolean","anchorEl","current","clientWidth","suggestion","idx","key","onClick","cursor","parse","opacity","highlight","whiteSpace","text","remove","IndexPage","Layout","height","Helmet","components_TestSearch","m","module","exports","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","React","InternalPageRenderer","Object","assign","json","propTypes","PropTypes","shape","string","isRequired","createContext","object","func","theme","createMuiTheme","typography","useNextVariants","palette","type","primary","blue","secondary","white","children","styles","position","gatsby_link_default","to","color","container","direction","justify","alignItems"],"mappings":"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","file":"component---src-pages-index-js-0bb691e7c92dc9ef9968.js","sourcesContent":["import React, { Fragment, useState, useRef } from 'react';\nimport { Button, MenuItem, Popper, Paper, TextField } from '@material-ui/core';\n\nimport { navigate } from '@reach/router';\nimport slugify from 'slugify';\nimport isEqual from 'lodash/isEqual';\nimport match from 'autosuggest-highlight/match';\nimport parse from 'autosuggest-highlight/parse';\n\nconst tests = require('../data/tests.json').map(test => test.name);\n\nconst TestSearch = () => {\n    const [value, setValue] = useState('');\n    const inputRef = useRef(null);\n\n    const suggestions = tests\n        .filter(test => !isEqual(match(test, value), []))\n        .sort((a, b) => match(b, value).length - match(a, value).length)\n        .slice(0, 5);\n\n    return (\n        <Fragment>\n            <TextField\n                style={ {\n                    width: '70vw',\n                    maxWidth: 760\n                } }\n                inputRef={ inputRef }\n                value={ value }\n                onChange={ e => setValue(e.target.value) }\n                inputProps={ {\n                    onKeyDown: e => {\n                        if (e.keyCode === 13) {\n                            if (tests.includes(value)) {\n                                navigate(slugify(value, { lower: true }));\n                            } else {\n                                setValue(suggestions[0]);\n                            }\n                        }\n                    }\n                } }\n                placeholder='Search AP Tests...'\n            />\n            <Popper open={ Boolean(suggestions) && !tests.includes(value) } anchorEl={ inputRef.current }>\n                <Paper\n                    style={ { width: inputRef.current ? inputRef.current.clientWidth : null } }>\n                    {\n                        suggestions.map((suggestion, idx) => <MenuItem key={ idx } onClick={ () => {\n                            setValue(suggestion);\n                        } } style={ { cursor: 'pointer' } }>{\n                            parse(suggestion, match(suggestion, value)).map((match, idx) => <span key={ idx } style={ {\n                                opacity: match.highlight ? 1 : 0.5,\n                                whiteSpace: 'pre'\n                            } }>\n                                { match.text }\n                            </span>)\n                        }</MenuItem>\n                        )\n                    }\n                </Paper>\n            </Popper>\n            <Button onClick={ () => {\n                if (tests.includes(value)) {\n                    navigate(slugify(value, {\n                        lower: true,\n                        remove: /:/\n                    }));\n                }\n            } }>Select</Button>\n        </Fragment>\n    );\n}\n\nexport default TestSearch;\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport Layout from '../components/Layout';\nimport TestSearch from '../components/TestSearch';\n\nconst IndexPage = () => (\n    <Layout style={ {\n        height: 'calc(70% - 64px)'\n    } }>\n        <Helmet>\n            <title>AP Timer</title>\n        </Helmet>\n        <TestSearch/>\n    </Layout>\n);\n\nexport default IndexPage;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from 'react';\nimport { AppBar, Grid, Toolbar } from '@material-ui/core';\nimport { Link } from 'gatsby';\n\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'\nimport blue from '@material-ui/core/colors/blue';\nimport { white } from '@material-ui/core/colors/common';\n\nimport '../styles/layout.css';\n\nconst theme = createMuiTheme({\n    typography: {\n        useNextVariants: true,\n    },\n    palette: {\n        type: 'light',\n        primary: blue,\n        secondary: white\n    }\n});\n\nconst Layout = ({ children, style }) => (\n    <MuiThemeProvider theme={ theme }>\n        <AppBar position='static'>\n            <Toolbar>\n                <Link to='/' style={ { color: 'white' } }>AP Timer</Link>\n            </Toolbar>\n        </AppBar>\n        <Grid container direction='column' justify='center' alignItems='center' style={ style }>\n            { children }\n        </Grid>\n    </MuiThemeProvider>\n);\n\nexport default Layout;\n"],"sourceRoot":""}